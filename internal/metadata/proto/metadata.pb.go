// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: metadata.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Encryption int32

const (
	Encryption_NONE    Encryption = 0 // No encryption
	Encryption_RCLONE  Encryption = 1 // Rclone encryption
	Encryption_HEADERS Encryption = 2 // Headers encryption
	Encryption_AES     Encryption = 3 // Generic AES-CBC encryption (for RAR, 7z, etc.)
)

// Enum value maps for Encryption.
var (
	Encryption_name = map[int32]string{
		0: "NONE",
		1: "RCLONE",
		2: "HEADERS",
		3: "AES",
	}
	Encryption_value = map[string]int32{
		"NONE":    0,
		"RCLONE":  1,
		"HEADERS": 2,
		"AES":     3,
	}
)

func (x Encryption) Enum() *Encryption {
	p := new(Encryption)
	*p = x
	return p
}

func (x Encryption) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Encryption) Descriptor() protoreflect.EnumDescriptor {
	return file_metadata_proto_enumTypes[0].Descriptor()
}

func (Encryption) Type() protoreflect.EnumType {
	return &file_metadata_proto_enumTypes[0]
}

func (x Encryption) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Encryption.Descriptor instead.
func (Encryption) EnumDescriptor() ([]byte, []int) {
	return file_metadata_proto_rawDescGZIP(), []int{0}
}

// FileStatus represents the health status of a file
type FileStatus int32

const (
	FileStatus_FILE_STATUS_UNSPECIFIED FileStatus = 0
	FileStatus_FILE_STATUS_HEALTHY     FileStatus = 1 // All segments available and file is complete
	FileStatus_FILE_STATUS_CORRUPTED   FileStatus = 3 // Segments missing or corrupted
)

// Enum value maps for FileStatus.
var (
	FileStatus_name = map[int32]string{
		0: "FILE_STATUS_UNSPECIFIED",
		1: "FILE_STATUS_HEALTHY",
		3: "FILE_STATUS_CORRUPTED",
	}
	FileStatus_value = map[string]int32{
		"FILE_STATUS_UNSPECIFIED": 0,
		"FILE_STATUS_HEALTHY":     1,
		"FILE_STATUS_CORRUPTED":   3,
	}
)

func (x FileStatus) Enum() *FileStatus {
	p := new(FileStatus)
	*p = x
	return p
}

func (x FileStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_metadata_proto_enumTypes[1].Descriptor()
}

func (FileStatus) Type() protoreflect.EnumType {
	return &file_metadata_proto_enumTypes[1]
}

func (x FileStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileStatus.Descriptor instead.
func (FileStatus) EnumDescriptor() ([]byte, []int) {
	return file_metadata_proto_rawDescGZIP(), []int{1}
}

// SegmentData contains Usenet segment information with byte offsets
type SegmentData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SegmentSize   int64                  `protobuf:"varint,1,opt,name=segment_size,json=segmentSize,proto3" json:"segment_size,omitempty"` // Size of the segment in bytes
	StartOffset   int64                  `protobuf:"varint,3,opt,name=start_offset,json=startOffset,proto3" json:"start_offset,omitempty"` // Start byte offset in the data stream
	EndOffset     int64                  `protobuf:"varint,4,opt,name=end_offset,json=endOffset,proto3" json:"end_offset,omitempty"`       // End byte offset in the data stream
	Id            string                 `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`                                       // Usenet message ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SegmentData) Reset() {
	*x = SegmentData{}
	mi := &file_metadata_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SegmentData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SegmentData) ProtoMessage() {}

func (x *SegmentData) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SegmentData.ProtoReflect.Descriptor instead.
func (*SegmentData) Descriptor() ([]byte, []int) {
	return file_metadata_proto_rawDescGZIP(), []int{0}
}

func (x *SegmentData) GetSegmentSize() int64 {
	if x != nil {
		return x.SegmentSize
	}
	return 0
}

func (x *SegmentData) GetStartOffset() int64 {
	if x != nil {
		return x.StartOffset
	}
	return 0
}

func (x *SegmentData) GetEndOffset() int64 {
	if x != nil {
		return x.EndOffset
	}
	return 0
}

func (x *SegmentData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// FileMetadata represents a single virtual file in the filesystem
// The filename comes from the actual metadata filename on disk
type FileMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileSize      int64                  `protobuf:"varint,1,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`                 // Size of the virtual file in bytes
	SourceNzbPath string                 `protobuf:"bytes,2,opt,name=source_nzb_path,json=sourceNzbPath,proto3" json:"source_nzb_path,omitempty"` // Path to source NZB file
	Status        FileStatus             `protobuf:"varint,3,opt,name=status,proto3,enum=metadata.FileStatus" json:"status,omitempty"`            // Health status of the file
	CreatedAt     int64                  `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`              // Unix timestamp when metadata was created
	ModifiedAt    int64                  `protobuf:"varint,5,opt,name=modified_at,json=modifiedAt,proto3" json:"modified_at,omitempty"`           // Unix timestamp when last modified
	Password      string                 `protobuf:"bytes,6,opt,name=password,proto3" json:"password,omitempty"`                                  // Password for rclone encrypted files
	Salt          string                 `protobuf:"bytes,7,opt,name=salt,proto3" json:"salt,omitempty"`                                          // Salt for rclone encrypted files
	Encryption    Encryption             `protobuf:"varint,8,opt,name=encryption,proto3,enum=metadata.Encryption" json:"encryption,omitempty"`    // Encryption type used for the file
	SegmentData   []*SegmentData         `protobuf:"bytes,9,rep,name=segment_data,json=segmentData,proto3" json:"segment_data,omitempty"`         // Segment information (lazy-loaded)
	AesKey        []byte                 `protobuf:"bytes,10,opt,name=aes_key,json=aesKey,proto3" json:"aes_key,omitempty"`                       // AES encryption key (for AES-encrypted archives)
	AesIv         []byte                 `protobuf:"bytes,11,opt,name=aes_iv,json=aesIv,proto3" json:"aes_iv,omitempty"`                          // AES initialization vector (for AES-encrypted archives)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileMetadata) Reset() {
	*x = FileMetadata{}
	mi := &file_metadata_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileMetadata) ProtoMessage() {}

func (x *FileMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileMetadata.ProtoReflect.Descriptor instead.
func (*FileMetadata) Descriptor() ([]byte, []int) {
	return file_metadata_proto_rawDescGZIP(), []int{1}
}

func (x *FileMetadata) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *FileMetadata) GetSourceNzbPath() string {
	if x != nil {
		return x.SourceNzbPath
	}
	return ""
}

func (x *FileMetadata) GetStatus() FileStatus {
	if x != nil {
		return x.Status
	}
	return FileStatus_FILE_STATUS_UNSPECIFIED
}

func (x *FileMetadata) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *FileMetadata) GetModifiedAt() int64 {
	if x != nil {
		return x.ModifiedAt
	}
	return 0
}

func (x *FileMetadata) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *FileMetadata) GetSalt() string {
	if x != nil {
		return x.Salt
	}
	return ""
}

func (x *FileMetadata) GetEncryption() Encryption {
	if x != nil {
		return x.Encryption
	}
	return Encryption_NONE
}

func (x *FileMetadata) GetSegmentData() []*SegmentData {
	if x != nil {
		return x.SegmentData
	}
	return nil
}

func (x *FileMetadata) GetAesKey() []byte {
	if x != nil {
		return x.AesKey
	}
	return nil
}

func (x *FileMetadata) GetAesIv() []byte {
	if x != nil {
		return x.AesIv
	}
	return nil
}

var File_metadata_proto protoreflect.FileDescriptor

const file_metadata_proto_rawDesc = "" +
	"\n" +
	"\x0emetadata.proto\x12\bmetadata\"\x82\x01\n" +
	"\vSegmentData\x12!\n" +
	"\fsegment_size\x18\x01 \x01(\x03R\vsegmentSize\x12!\n" +
	"\fstart_offset\x18\x03 \x01(\x03R\vstartOffset\x12\x1d\n" +
	"\n" +
	"end_offset\x18\x04 \x01(\x03R\tendOffset\x12\x0e\n" +
	"\x02id\x18\x05 \x01(\tR\x02id\"\x91\x03\n" +
	"\fFileMetadata\x12\x1b\n" +
	"\tfile_size\x18\x01 \x01(\x03R\bfileSize\x12&\n" +
	"\x0fsource_nzb_path\x18\x02 \x01(\tR\rsourceNzbPath\x12,\n" +
	"\x06status\x18\x03 \x01(\x0e2\x14.metadata.FileStatusR\x06status\x12\x1d\n" +
	"\n" +
	"created_at\x18\x04 \x01(\x03R\tcreatedAt\x12\x1f\n" +
	"\vmodified_at\x18\x05 \x01(\x03R\n" +
	"modifiedAt\x12\x1a\n" +
	"\bpassword\x18\x06 \x01(\tR\bpassword\x12\x12\n" +
	"\x04salt\x18\a \x01(\tR\x04salt\x124\n" +
	"\n" +
	"encryption\x18\b \x01(\x0e2\x14.metadata.EncryptionR\n" +
	"encryption\x128\n" +
	"\fsegment_data\x18\t \x03(\v2\x15.metadata.SegmentDataR\vsegmentData\x12\x17\n" +
	"\aaes_key\x18\n" +
	" \x01(\fR\x06aesKey\x12\x15\n" +
	"\x06aes_iv\x18\v \x01(\fR\x05aesIv*8\n" +
	"\n" +
	"Encryption\x12\b\n" +
	"\x04NONE\x10\x00\x12\n" +
	"\n" +
	"\x06RCLONE\x10\x01\x12\v\n" +
	"\aHEADERS\x10\x02\x12\a\n" +
	"\x03AES\x10\x03*]\n" +
	"\n" +
	"FileStatus\x12\x1b\n" +
	"\x17FILE_STATUS_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13FILE_STATUS_HEALTHY\x10\x01\x12\x19\n" +
	"\x15FILE_STATUS_CORRUPTED\x10\x03B\x04Z\x02./b\x06proto3"

var (
	file_metadata_proto_rawDescOnce sync.Once
	file_metadata_proto_rawDescData []byte
)

func file_metadata_proto_rawDescGZIP() []byte {
	file_metadata_proto_rawDescOnce.Do(func() {
		file_metadata_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_metadata_proto_rawDesc), len(file_metadata_proto_rawDesc)))
	})
	return file_metadata_proto_rawDescData
}

var file_metadata_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_metadata_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_metadata_proto_goTypes = []any{
	(Encryption)(0),      // 0: metadata.Encryption
	(FileStatus)(0),      // 1: metadata.FileStatus
	(*SegmentData)(nil),  // 2: metadata.SegmentData
	(*FileMetadata)(nil), // 3: metadata.FileMetadata
}
var file_metadata_proto_depIdxs = []int32{
	1, // 0: metadata.FileMetadata.status:type_name -> metadata.FileStatus
	0, // 1: metadata.FileMetadata.encryption:type_name -> metadata.Encryption
	2, // 2: metadata.FileMetadata.segment_data:type_name -> metadata.SegmentData
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_metadata_proto_init() }
func file_metadata_proto_init() {
	if File_metadata_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_metadata_proto_rawDesc), len(file_metadata_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_metadata_proto_goTypes,
		DependencyIndexes: file_metadata_proto_depIdxs,
		EnumInfos:         file_metadata_proto_enumTypes,
		MessageInfos:      file_metadata_proto_msgTypes,
	}.Build()
	File_metadata_proto = out.File
	file_metadata_proto_goTypes = nil
	file_metadata_proto_depIdxs = nil
}
